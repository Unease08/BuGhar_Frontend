import { Box } from "@mui/material";
import { Header } from "../../components";
import { Link } from "react-router-dom";
import { useState, useEffect } from "react";
import api from "../../../library/Api";
import toast from "react-hot-toast";

const Vulnerability = () => {
  const [vulnerabilities, setVulnerabilities] = useState([]);
  const [currentPage, setCurrentPage] = useState(1);
  const [deleteId, setDeleteId] = useState(null);
  const itemsPerPage = 10;

  const fetchVulnerabilities = async () => {
    try {
      const response = await api.get("/vulnerability-type/");
      const sortedData = response.data.sort((a, b) => b.id - a.id);
      setVulnerabilities(sortedData);
    } catch (error) {
      console.error("Error fetching vulnerabilities data:", error);
    }
  };

  useEffect(() => {
    fetchVulnerabilities();
  }, []);

  const totalPages = Math.ceil(vulnerabilities.length / itemsPerPage);

  const currentItems = vulnerabilities.slice(
    (currentPage - 1) * itemsPerPage,
    currentPage * itemsPerPage
  );

  const handlePageChange = (page) => {
    setCurrentPage(page);
  };

  const handleDelete = async (id) => {
    try {
      await api.delete(`/vulnerability-type/${id}`);
      toast.success("Vulnerability deleted successfully!");
      fetchVulnerabilities();
    } catch (error) {
      toast.error("Error deleting vulnerability!");
    }
  };

  const confirmDelete = (id) => {
    toast.custom((t) => (
      <div
        className={`${
          t.visible ? "animate-enter" : "animate-leave"
        } max-w-xs w-full bg-white text-black p-4 rounded-md shadow-lg space-y-2 transition-all duration-500`}
      >
        <p>Are you sure you want to delete this vulnerability?</p>
        <div className="flex justify-end space-x-2">
          <button
            onClick={() => {
              handleDelete(id);
              toast.dismiss(t.id);
            }}
            className="py-1 px-3 bg-green-600 rounded-lg text-white"
          >
            Yes
          </button>
          <button
            onClick={() => {
              toast.dismiss(t.id);
              toast.error("Cancelled");
            }}
            className="py-1 px-3 bg-red-600 rounded-lg text-white"
          >
            No
          </button>
        </div>
      </div>
    ));
  };

  return (
    <Box m="20px">
      <Header title="Vulnerabilities" subtitle="List of Vulnerabilities" />
      <div className="relative overflow-x-auto shadow-md sm:rounded-lg">
        <div className="flex items-center justify-between flex-column md:flex-row flex-wrap space-y-4 md:space-y-0 py-4 bg-gray-900">
          <div className="relative flex justify-end flex-grow items-center">
            <Link to="/add-vulnerability">
              <div className="mr-4">
                <button className="py-2 px-4 rounded-lg text-sm font-medium text-white bg-blue-600 hover:bg-blue-700 transition-colors duration-200 focus:outline-none focus:ring-2 focus:ring-blue-500 focus:ring-offset-1">
                  Add Vulnerability
                </button>
              </div>
            </Link>
          </div>
        </div>

        <table className="w-full text-sm text-left text-gray-400">
          <thead className="text-md uppercase bg-gray-700 text-gray-400">
            <tr>
              <th className="px-6 py-3 text-gray-400">S.N.</th>
              <th className="px-6 py-3 text-gray-400">Vulnerability Types</th>
              <th className="px-6 py-3 text-gray-400">Description</th>
              <th className="px-6 py-3 text-gray-400">Action</th>
            </tr>
          </thead>
          <tbody>
            {currentItems.map((vulnerability, index) => (
              <tr
                key={vulnerability.id}
                className="border-b bg-gray-800 border-gray-700 hover:bg-gray-600 hover:text-white"
              >
                <td className="px-6 py-4 text-white">
                  {(currentPage - 1) * itemsPerPage + index + 1}
                </td>
                <td className="px-6 py-2.5">{vulnerability.name}</td>
                <td className="px-6">{vulnerability.description}</td>
                <td className="px-6 space-x-2">
                  <Link to={`/update-vulnerability/${vulnerability.id}`}>
                    <button className="py-1 px-3 rounded-lg text-sm font-medium text-white bg-green-700 hover:bg-green-900 transition-colors duration-200">
                      Update
                    </button>
                  </Link>
                  <button
                    onClick={() => confirmDelete(vulnerability.id)}
                    className="py-1 px-3 rounded-lg text-sm font-medium text-white bg-red-700 hover:bg-red-900 transition-colors duration-200"
                  >
                    Delete
                  </button>
                </td>
              </tr>
            ))}
          </tbody>
        </table>

        <div className="flex justify-center mt-8">
          <nav className="flex items-center space-x-2">
            <button
              onClick={() => handlePageChange(currentPage - 1)}
              disabled={currentPage === 1}
              className="px-4 py-2 border bg-gray-800 text-white rounded-md disabled:opacity-50"
            >
              Prev
            </button>
            {Array.from({ length: totalPages }, (_, index) => (
              <button
                key={index}
                onClick={() => handlePageChange(index + 1)}
                className={`px-4 py-2 border rounded-md ${
                  currentPage === index + 1
                    ? "bg-indigo-600 text-white"
                    : "bg-gray-800 text-white"
                }`}
              >
                {index + 1}
              </button>
            ))}
            <button
              onClick={() => handlePageChange(currentPage + 1)}
              disabled={currentPage === totalPages}
              className="px-4 py-2 border bg-gray-800 text-white rounded-md disabled:opacity-50"
            >
              Next
            </button>
          </nav>
        </div>
      </div>
    </Box>
  );
};

export default Vulnerability;
